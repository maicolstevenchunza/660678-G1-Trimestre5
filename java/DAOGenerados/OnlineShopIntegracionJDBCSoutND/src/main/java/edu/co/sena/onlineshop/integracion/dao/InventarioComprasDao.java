/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.onlineshop.integracion.dao;

import edu.co.sena.onlineshop.integracion.dto.*;
import edu.co.sena.onlineshop.integracion.exceptions.*;

public interface InventarioComprasDao
{
	/** 
	 * Inserts a new row in the inventario_compras table.
	 */
	public InventarioComprasPk insert(InventarioCompras dto) throws InventarioComprasDaoException;

	/** 
	 * Updates a single row in the inventario_compras table.
	 */
	public void update(InventarioComprasPk pk, InventarioCompras dto) throws InventarioComprasDaoException;

	/** 
	 * Deletes a single row in the inventario_compras table.
	 */
	public void delete(InventarioComprasPk pk) throws InventarioComprasDaoException;

	/** 
	 * Returns the rows from the inventario_compras table that matches the specified primary-key value.
	 */
	public InventarioCompras findByPrimaryKey(InventarioComprasPk pk) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'ID_INVENTARIO = :idInventario AND PRODUCTO_ID_PRODUCTO = :productoIdProducto AND PROVEEDOR_TIPO_DOCUMENTO = :proveedorTipoDocumento AND PROVEEDOR_NUM_DOCUMENTO = :proveedorNumDocumento'.
	 */
	public InventarioCompras findByPrimaryKey(int idInventario, String productoIdProducto, String proveedorTipoDocumento, String proveedorNumDocumento) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria ''.
	 */
	public InventarioCompras[] findAll() throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'PRODUCTO_ID_PRODUCTO = :productoIdProducto'.
	 */
	public InventarioCompras[] findByProducto(String productoIdProducto) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'PROVEEDOR_TIPO_DOCUMENTO = :proveedorTipoDocumento AND PROVEEDOR_NUM_DOCUMENTO = :proveedorNumDocumento'.
	 */
	public InventarioCompras[] findByProveedor(String proveedorTipoDocumento, String proveedorNumDocumento) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'ID_INVENTARIO = :idInventario'.
	 */
	public InventarioCompras[] findWhereIdInventarioEquals(int idInventario) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'PRODUCTO_ID_PRODUCTO = :productoIdProducto'.
	 */
	public InventarioCompras[] findWhereProductoIdProductoEquals(String productoIdProducto) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'CAN_PRO_COMPRADO = :canProComprado'.
	 */
	public InventarioCompras[] findWhereCanProCompradoEquals(int canProComprado) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'FECHA_COMPRA = :fechaCompra'.
	 */
	public InventarioCompras[] findWhereFechaCompraEquals(String fechaCompra) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'PROVEEDOR_TIPO_DOCUMENTO = :proveedorTipoDocumento'.
	 */
	public InventarioCompras[] findWhereProveedorTipoDocumentoEquals(String proveedorTipoDocumento) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the criteria 'PROVEEDOR_NUM_DOCUMENTO = :proveedorNumDocumento'.
	 */
	public InventarioCompras[] findWhereProveedorNumDocumentoEquals(String proveedorNumDocumento) throws InventarioComprasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the inventario_compras table that match the specified arbitrary SQL statement
	 */
	public InventarioCompras[] findByDynamicSelect(String sql, Object[] sqlParams) throws InventarioComprasDaoException;

	/** 
	 * Returns all rows from the inventario_compras table that match the specified arbitrary SQL statement
	 */
	public InventarioCompras[] findByDynamicWhere(String sql, Object[] sqlParams) throws InventarioComprasDaoException;

}
