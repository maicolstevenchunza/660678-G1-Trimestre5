/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.onlineshop.integracion.dao;

import edu.co.sena.onlineshop.integracion.dto.*;
import edu.co.sena.onlineshop.integracion.exceptions.*;

public interface PagoDao
{
	/** 
	 * Inserts a new row in the pago table.
	 */
	public PagoPk insert(Pago dto) throws PagoDaoException;

	/** 
	 * Updates a single row in the pago table.
	 */
	public void update(PagoPk pk, Pago dto) throws PagoDaoException;

	/** 
	 * Deletes a single row in the pago table.
	 */
	public void delete(PagoPk pk) throws PagoDaoException;

	/** 
	 * Returns the rows from the pago table that matches the specified primary-key value.
	 */
	public Pago findByPrimaryKey(PagoPk pk) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria 'FACTURA_ID_FACTURA = :facturaIdFactura'.
	 */
	public Pago findByPrimaryKey(int facturaIdFactura) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria ''.
	 */
	public Pago[] findAll() throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria 'FACTURA_ID_FACTURA = :facturaIdFactura'.
	 */
	public Pago[] findByFactura(int facturaIdFactura) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria 'FACTURA_ID_FACTURA = :facturaIdFactura'.
	 */
	public Pago[] findWhereFacturaIdFacturaEquals(int facturaIdFactura) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria 'tipo_pago = :tipoPago'.
	 */
	public Pago[] findWhereTipoPagoEquals(String tipoPago) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria 'nume_cuenta = :numeCuenta'.
	 */
	public Pago[] findWhereNumeCuentaEquals(String numeCuenta) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the criteria 'numero_targeta = :numeroTargeta'.
	 */
	public Pago[] findWhereNumeroTargetaEquals(int numeroTargeta) throws PagoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the pago table that match the specified arbitrary SQL statement
	 */
	public Pago[] findByDynamicSelect(String sql, Object[] sqlParams) throws PagoDaoException;

	/** 
	 * Returns all rows from the pago table that match the specified arbitrary SQL statement
	 */
	public Pago[] findByDynamicWhere(String sql, Object[] sqlParams) throws PagoDaoException;

}
